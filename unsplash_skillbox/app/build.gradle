plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.parcelize)
    alias(libs.plugins.navigation.safe.args)
    alias(libs.plugins.dagger.hilt)
    alias(libs.plugins.devtools.ksp)
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.skillbox.unsplash"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                appAuthRedirectScheme: "unsplash"
        ]
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    namespace 'com.skillbox.unsplash'
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    implementation libs.symbol.processing.api
    //ViewPager
    implementation libs.androidx.viewpager2
    implementation libs.dotsindicator
    //View binding
    implementation libs.viewbindingpropertydelegate
    //Navigation
    implementation libs.bundles.navigation
    //Dagger Hilt
    implementation libs.hilt.android
    ksp libs.dagger.compier.ksp // Dagger compiler
    ksp libs.hilt.compier.ksp
    //AppAuth
    implementation libs.appauth
    //Moshi
    implementation libs.moshi.moshi
    implementation libs.moshi.kotlin
    ksp libs.moshi.codegen.ksp
    //Retrofit
    implementation libs.retrofit
    implementation libs.converter.moshi
    //OkHttp
    implementation libs.logging.interceptor
    //Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android
    //Timber
    implementation libs.timber
    //RecyclerView
    implementation libs.androidx.recyclerview
    //AdapterDelegate
    implementation libs.adapterdelegates4
    //Glide
    implementation libs.glide
    annotationProcessor libs.compiler
    //LiveData
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    //Paging
    implementation libs.androidx.paging.runtime
    //Flipper
    debugImplementation libs.facebook.flipper
    releaseImplementation libs.flipper.facebook.no.op
    debugImplementation libs.flipper.network.plugin
    debugImplementation libs.soloader
    releaseImplementation libs.flipper.android.no.op
    //SwipeRefresh
    implementation libs.androidx.swiperefreshlayout
    //Room
    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx //интеграция room с корутинами
    implementation libs.androidx.room.paging
    annotationProcessor libs.androidx.room.compiler
    ksp libs.androidx.room.ksp//автоматическая генерация реализаций для DAO и DB

    //WorkManager
    implementation libs.androidx.work.runtime.ktx
    implementation libs.androidx.hilt.work
    //Chrome custom tabs
    implementation libs.androidx.browser
}

